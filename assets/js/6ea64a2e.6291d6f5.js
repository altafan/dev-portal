"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[8040],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:o,i[1]=d;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2506:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],d={title:"Run with Docker",sidebar_position:2},c=void 0,s={unversionedId:"provider/daemon/getting_started/run_docker",id:"provider/daemon/getting_started/run_docker",isDocsHomePage:!1,title:"Run with Docker",description:"Running a daemon as a dockerized container solution is easy as pulling the official image from the organization's Github Container registry:",source:"@site/docs/provider/daemon/getting_started/run_docker.md",sourceDirName:"provider/daemon/getting_started",slug:"/provider/daemon/getting_started/run_docker",permalink:"/docs/provider/daemon/getting_started/run_docker",editUrl:"https://github.com/tdex-network/dev-portal/edit/master/docs/provider/daemon/getting_started/run_docker.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Run with Docker",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/provider/daemon/getting_started/overview"},next:{title:"Run Standalone",permalink:"/docs/provider/daemon/getting_started/run_standalone"}},l=[],p={toc:l};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Running a daemon as a dockerized container solution is easy as pulling the official image from the organization's Github Container registry:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker pull ghcr.io/tdex-network/tdexd:latest\n")),(0,a.kt)("p",null,"and starting a container with this image:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Run on Liquid network connecting to blockstream.info for sourcing blockchain data\n$ docker run -it -d --name tdexd --restart unless-stopped -p 9945:9945 -p 9000:9000 -v `pwd`/tdexd:/home/tdex/.tdex-daemon ghcr.io/tdex-network/tdexd:latest\n\n# Run on Liquid connecting to a local explorer\n$ docker run -it -d --name tdexd --restart unless-stopped -p 9945:9945 -p 9000:9000 -v `pwd`/tdexd:/home/tdex/.tdex-daemon -e TDEX_EXPLORER_ENDPOINT="http://127.0.0.1:3001" ghcr.io/tdex-network/tdexd:latest\n\n# Run on Regtest connecting to a local explorer and using regtest LBTC asset hash.\n$ docker run -it -d --name tdexd --restart unless-stopped -p 9945:9945 -p 9000:9000 -v `pwd`/tdexd:/home/tdex/.tdex-daemon -e TDEX_NETWORK="regtest" -e TDEX_BASE_ASSET="5ac9f65c0efcc4775e0baec4ec03abdde22473cd3cf33c0419ca290e0751b225" -e TDEX_EXPLORER_ENDPOINT="http://127.0.0.1:3001"  ghcr.io/tdex-network/tdexd:latest\n\n# Run on Liquid and specify USDt as base asset instead of default L-BTC\n$ docker run -it -d --name tdexd --restart unless-stopped -p 9945:9945 -p 9000:9000 -v `pwd`/tdexd:/home/tdex/.tdex-daemon -e TDEX_BASE_ASSET="ce091c998b83c78bb71a632313ba3760f1763d9cfcffae02258ffa9865a37bd2" ghcr.io/tdex-network/tdexd:latest\n')),(0,a.kt)("p",null,"With the above commands, you'll find a new ",(0,a.kt)("inlineCode",{parentName:"p"},"tdexd")," folder in your current path, created by dockerized daemon."),(0,a.kt)("p",null,"Check the logs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker logs tdex\n# INFO[0000] trader interface is listening on :9945\n#\xa0INFO[0000] operator interface is listening on :9945\n")),(0,a.kt)("p",null,"Note that the official image comes also with the CLI, so you can create an alias to use it like it was present in your path like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ alias tdex='docker exec -it tdexd tdex'\n")),(0,a.kt)("p",null,"Next step is to ",(0,a.kt)("a",{parentName:"p",href:"/docs/provider/daemon/getting_started/configure_cli"},"configure the operator CLI"),"."))}u.isMDXComponent=!0}}]);