"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[7700],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=l(n),f=o,m=u["".concat(c,".").concat(f)]||u[f]||p[f]||a;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:o,i[1]=d;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3873:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],d={title:"Getting Started",sidebar_position:2},c=void 0,l={unversionedId:"provider/feeder/getting_started",id:"provider/feeder/getting_started",isDocsHomePage:!1,title:"Getting Started",description:"Now that you have configured your feeder, it's time to start it up.",source:"@site/docs/provider/feeder/getting_started.md",sourceDirName:"provider/feeder",slug:"/provider/feeder/getting_started",permalink:"/docs/provider/feeder/getting_started",editUrl:"https://github.com/tdex-network/dev-portal/edit/master/docs/provider/feeder/getting_started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Getting Started",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/provider/feeder/overview"}},s=[{value:"Run the binary",id:"run-the-binary",children:[]},{value:"Run the container",id:"run-the-container",children:[]},{value:"Securely connect feeder to daemon",id:"securely-connect-feeder-to-daemon",children:[]}],p={toc:s};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Now that you have configured your feeder, it's time to start it up."),(0,a.kt)("p",null,"The service can be served in 2 different ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"as a ",(0,a.kt)("a",{parentName:"li",href:"#run-the-binary"},"standalone binary")),(0,a.kt)("li",{parentName:"ul"},"as a ",(0,a.kt)("a",{parentName:"li",href:"#run-the-container"},"Docker service"))),(0,a.kt)("p",null,"Depending on your preferences and needs you may want to proceed in one or the other way."),(0,a.kt)("p",null,"If you already know how to start a feeder and are interested to securely connect it to a remote daemon (with macaroons/TLS enabled) take a look ",(0,a.kt)("a",{parentName:"p",href:"#securely-connect-feeder-to-daemon"},"here"),"."),(0,a.kt)("h2",{id:"run-the-binary"},"Run the binary"),(0,a.kt)("p",null,"If you want to run your feeder as a standolne binary, you can download the latest version for your platform (linux or macOS) from the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tdex-network/tdex-feeder/releases"},"release page"),"."),(0,a.kt)("p",null,"If you want to build it from source, you can follow the steps described in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tdex-network/tdex-feeder#build-it-yourself"},"README")," of the public repository. This requires ",(0,a.kt)("a",{parentName:"p",href:"https://golang.org/doc/install"},"Golang")," to be installed."),(0,a.kt)("p",null,"Now that you have the binary, it's time to execute it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# This requires having a config.json file in the same directory of the binary\n$ ./feederd-linux-amd64\n\n\n#\xa0This explicitly defines where to file the config file - it can have a different name!\nexport FEEDER_CONFIG_PATH=~/.feeder-config/config.example.json\n$ ./feederd-linux-amd64\n")),(0,a.kt)("h2",{id:"run-the-container"},"Run the container"),(0,a.kt)("p",null,"If you want to serve your feeder as a dockerized service, just download the latest image locally and run the container:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"#\xa0Pull the image from the github container registry\n$ docker pull ghcr.io/tdex-network/feederd:latest\n\n#\xa0Run the service\n$ docker run -rm --name feederd -v $HOME/.feeder-config/config.json:/config.json --network <network_with_tdexd_running> -d ghcr.io/tdex-network/feederd:latest\n")),(0,a.kt)("p",null,"Make sure to use the proper ",(0,a.kt)("em",{parentName:"p"},"rpc_address")," in the config file to connect to your daemon. For example, if you're serving the daemon as a docker container named ",(0,a.kt)("inlineCode",{parentName:"p"},"tdexd")," you will set it to ",(0,a.kt)("inlineCode",{parentName:"p"},"tdexd:9000")," taking advantage of the Docker internal DNS resolution. "),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"It's always a good practice to create a custom network where to run your inter-connected containers in order to isolate them.  "))),(0,a.kt)("h2",{id:"securely-connect-feeder-to-daemon"},"Securely connect feeder to daemon"),(0,a.kt)("p",null,"If you want to connect your feeder to a daemon with macaroon/TLS enabled on the Operator interface you have to:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Be sure you followed the ",(0,a.kt)("a",{parentName:"li",href:"/docs/provider/daemon/getting_started/run_prod"},"instructions")," to configure your daemon properly"),(0,a.kt)("li",{parentName:"ol"},"Copy the ",(0,a.kt)("inlineCode",{parentName:"li"},"price.macaroon")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"cert.pem")," generated by the daemon at startup (they can be found in daemon's datadir) to the machine hosting the feeder"),(0,a.kt)("li",{parentName:"ol"},"Add the ",(0,a.kt)("em",{parentName:"li"},"macaroons_path")," and the ",(0,a.kt)("em",{parentName:"li"},"tls_cert_path")," of the file mentioned above and change the ",(0,a.kt)("em",{parentName:"li"},"rpc_address")," for the target daemon in the feeder's config file")),(0,a.kt)("h4",{id:"example-for-standolone-feeder"},"Example for standolone feeder"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ export $FEEDER_CONFIG_PATH=~/.feeder-config/config.json\n$ ./feederd\n")),(0,a.kt)("p",null,"Feeder's config file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "price_feeder": "kraken",\n    "interval": 300000,\n    "targets": [\n      {\n        "macaroons_path": "/home/user/.feeder-config/price.macaroon",\n        "tls_cert_path": "/home/user/.feeder-config/cert.pem",\n        "rpc_address": "provider.mydomain.com:9000"\n      }\n    ]\n}\n')),(0,a.kt)("h4",{id:"example-for-dockerized-feeder"},"Example for dockerized feeder"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Note that the files must be mounted as volumes of the container!\n$ docker run -rm -d \\\n    --name feederd \\\n    -v $HOME/.feeder-config/config.json:/config.json \\\n    -v $HOME/feeder-config/price.macaroon:/price.macaroon \\\n    -v $HOME/feeder-config/cert.pem:/cert.pem \\\n    ghcr.io/tdex-network/feederd:latest\n")),(0,a.kt)("p",null,"Feeder's config file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "price_feeder": "kraken",\n    "interval": 300000,\n    "targets": [\n      {\n        "macaroons_path": "/price.macaroon",\n        "tls_cert_path": "/cert.pem",\n        "rpc_address": "provider.mydomain.com:9000"\n      }\n    ]\n}\n')))}u.isMDXComponent=!0}}]);