"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[8651],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9044:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={title:"Trade",sidebar_position:3},p=void 0,l={unversionedId:"trader/SDK/Javascript/trade",id:"trader/SDK/Javascript/trade",isDocsHomePage:!1,title:"Trade",description:"Trade against a Liquidity provider in the TDEX network. This fully implements BOTD#4",source:"@site/docs/trader/SDK/Javascript/trade.md",sourceDirName:"trader/SDK/Javascript",slug:"/trader/SDK/Javascript/trade",permalink:"/docs/trader/SDK/Javascript/trade",editUrl:"https://github.com/tdex-network/dev-portal/edit/master/docs/trader/SDK/Javascript/trade.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Trade",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Identity",permalink:"/docs/trader/SDK/Javascript/Identity"},next:{title:"Swap",permalink:"/docs/trader/SDK/Javascript/swap"}},c=[{value:"Market",id:"market",children:[]},{value:"Sell L-BTC",id:"sell-l-btc",children:[]},{value:"Buy L-BTC",id:"buy-l-btc",children:[]},{value:"Preview",id:"preview",children:[]}],d={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Trade against a Liquidity provider in the TDEX network. This fully implements ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tdex-network/tdex-specs/blob/master/04-trade-protocol.md"},(0,o.kt)("strong",{parentName:"a"},"BOTD#4"))),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Trade")," object provides the API using to interact with TDex daemons. The constructor takes a configuration object with the following options:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"providerUrl"),": the TDex daemon endpoint, hosted by a Liquidity provider."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"explorerUrl"),": the Esplora endpoint using to get blockchain data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"utxos"),": the trader's unspents. You can ",(0,o.kt)("a",{parentName:"li",href:"#fetch-and-unblind-utxos"},"fetch them")," with LDK."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"coinSelector"),": specify the strategy used to select utxos during transaction creation.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const trade = new Trade({\n  providerUrl: "provider.tdex.network:9945",\n  explorerUrl: "https://blockstream.info/liquid/api",\n  utxos: traderUtxos, // an array of UtxoInterface\n  coinSelector: greedyCoinSelector(), // this is exported by tdex-sdk\n});\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"utxos")," are ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/vulpemventures/ldk/blob/master/src/types.ts#L33"},"JS objects")," wrapping utxo's data. They can be fetched without LDK. However, they ",(0,o.kt)("strong",{parentName:"p"},"must")," be unblinded in case of ",(0,o.kt)("a",{parentName:"p",href:"https://elementsproject.org/features/confidential-transactions"},"confidential outputs"),".")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("h3",{parentName:"div",id:"tor-proxy-for-web-clients"},"TOR proxy for web clients"),(0,o.kt)("p",{parentName:"div"},"Natively, web browsers do not support TOR protocol. That's why we are using a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tdex-network/tor-proxy"},"tor-proxy")," to redirect requests to onion endpoints. By default, clients use ",(0,o.kt)("inlineCode",{parentName:"p"},"https://proxy.tdex.network")," as proxy. If you want to use your own, you must specify your proxy endpoint in ",(0,o.kt)("inlineCode",{parentName:"p"},"Trade")," constructor."),(0,o.kt)("p",{parentName:"div"},"Example with a custom proxy hosted at ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("a",{parentName:"em",href:"https://my.custom.tor-proxy.endpoint"},"https://my.custom.tor-proxy.endpoint")),"."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const trade = new Trade(tradeOpts, "https://my.custom.tor-proxy.endpoint");\n')),(0,o.kt)("blockquote",{parentName:"div"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"tradeOpts.providerUrl")," should be an onion endpoint here.")))),(0,o.kt)("h3",{id:"market"},"Market"),(0,o.kt)("p",null,"We'll trade on LBTC<->USDT market. ",(0,o.kt)("inlineCode",{parentName:"p"},"MarketInterface")," describes the market with asset hashes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'const market = {\n  baseAsset: "6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d", // L-BTC\n  quoteAsset:\n    "c5870288a7c9eb5db398a5b5e7221feb9753134439e8ed9f569b0eea5a423330", // USDT\n};\n')),(0,o.kt)("h3",{id:"sell-l-btc"},"Sell L-BTC"),(0,o.kt)("p",null,"Then, using the ",(0,o.kt)("inlineCode",{parentName:"p"},"Trade")," instance, we are able to sell 10 000 sats of L-BTC. At this step, you need an ",(0,o.kt)("a",{parentName:"p",href:"#identity"},"IdentityInterface")," in order to sign the PSET."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// sell ALWAYS send baseAsset and receive quoteAsset\n// `trade` will select the baseAsset unspents.\nconst tradeTxID = await trade.sell({\n  market, // our MarketInterface object\n  amount: 100000, // expressed in satoshis\n  asset: market.baseAsset,\n  identity: identityInterface,\n});\n")),(0,o.kt)("h3",{id:"buy-l-btc"},"Buy L-BTC"),(0,o.kt)("p",null,"Contrary to ",(0,o.kt)("inlineCode",{parentName:"p"},"trade.sell"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"trade.buy")," function lets to buy the baseAsset (L-BTC here)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// sell ALWAYS send quoteAsset and receive baseAsset\n// `trade` will select the quoteAsset unspents.\nconst tradeTxID = await trade.buy({\n  market, // our MarketInterface object\n  amount: 100000, // expressed in satoshis\n  asset: market.baseAsset,\n  identity: identityInterface,\n});\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"asset")," parameter is using to specify the amount of base or quote asset in a trade. Thus, if u want to sell the ",(0,o.kt)("strong",{parentName:"p"},"base asset")," in order to receive a certain amount of ",(0,o.kt)("strong",{parentName:"p"},"quote asset"),", you can specify it in ",(0,o.kt)("inlineCode",{parentName:"p"},"sell()")," parameter object."),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// sell baseAsset and receive quoteAsset\nconst tradeTxID = await trade.sell({\n  market,\n  amount: 50000,\n  asset: market.quoteAsset, // receive 50000 sats of *quoteAsset* but still send *baseAsset*!\n  identity: identityInterface,\n});\n"))),(0,o.kt)("h3",{id:"preview"},"Preview"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"trade.preview")," method can be used to compute market's prices."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const {\n  assetToBeSent\n  amountToBeSent // amount of baseAsset satoshis to sell in order to receive 50000 quoteAsset\n  assetToReceive\n  amountToReceive\n} = await trade.preview({\n  market,\n  tradeType: TradeType.SELL,\n  amount: 50000,\n  asset: market.quoteAsset\n});\n")))}u.isMDXComponent=!0}}]);